<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/LYSGCDManager.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/LYSGCDManager</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>LYS_BaseObj.h</DeclaredIn>
            
			
			<NodeRef refid="3"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/LYSGCDManager/ly_systemSerialQueue</TokenIdentifier>
			<Abstract type="html">获取系统串行队列</Abstract>
			<DeclaredIn>LYS_BaseObj.h</DeclaredIn>
			
			<Declaration>+ (dispatch_queue_t)ly_systemSerialQueue</Declaration>
			
			<ReturnValue><Abstract type="html">返回系统串行队列</Abstract></ReturnValue>
			<Anchor>//api/name/ly_systemSerialQueue</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/LYSGCDManager/ly_systemParallelQueue</TokenIdentifier>
			<Abstract type="html">获取系统并行队列</Abstract>
			<DeclaredIn>LYS_BaseObj.h</DeclaredIn>
			
			<Declaration>+ (dispatch_queue_t)ly_systemParallelQueue</Declaration>
			
			<ReturnValue><Abstract type="html">返回系统并行队列</Abstract></ReturnValue>
			<Anchor>//api/name/ly_systemParallelQueue</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/LYSGCDManager/ly_createSerialQueue</TokenIdentifier>
			<Abstract type="html">创建自定义的串行队列</Abstract>
			<DeclaredIn>LYS_BaseObj.h</DeclaredIn>
			
			<Declaration>+ (dispatch_queue_t)ly_createSerialQueue</Declaration>
			
			<ReturnValue><Abstract type="html">返回自定义创建的串行对类</Abstract></ReturnValue>
			<Anchor>//api/name/ly_createSerialQueue</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/LYSGCDManager/ly_createParallelQueue</TokenIdentifier>
			<Abstract type="html">创建自定义的并行队列</Abstract>
			<DeclaredIn>LYS_BaseObj.h</DeclaredIn>
			
			<Declaration>+ (dispatch_queue_t)ly_createParallelQueue</Declaration>
			
			<ReturnValue><Abstract type="html">返回自定义创建的并行对类</Abstract></ReturnValue>
			<Anchor>//api/name/ly_createParallelQueue</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/LYSGCDManager/ly_addAsync_InSystemSerialQueue:</TokenIdentifier>
			<Abstract type="html">向系统串行队列添加异步任务</Abstract>
			<DeclaredIn>LYS_BaseObj.h</DeclaredIn>
			
			<Declaration>+ (void)ly_addAsync_InSystemSerialQueue:(LYSGCDAction)action</Declaration>
			<Parameters>
				<Parameter>
					<Name>action</Name>
					<Abstract type="html">异步任务</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/ly_addAsync_InSystemSerialQueue:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/LYSGCDManager/ly_addAsync_InSystemParallelQueue:</TokenIdentifier>
			<Abstract type="html">向系统并行队列添加异步任务</Abstract>
			<DeclaredIn>LYS_BaseObj.h</DeclaredIn>
			
			<Declaration>+ (void)ly_addAsync_InSystemParallelQueue:(LYSGCDAction)action</Declaration>
			<Parameters>
				<Parameter>
					<Name>action</Name>
					<Abstract type="html">异步任务</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/ly_addAsync_InSystemParallelQueue:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/LYSGCDManager/ly_addSync_InSystemParallelQueue:</TokenIdentifier>
			<Abstract type="html">向系统并行队列添加同步任务,(从上面表中可以看出,在系统串行队列中添加同步任务,会造成死锁,因此这里不在提供在系统串行队列中添加同步任务)</Abstract>
			<DeclaredIn>LYS_BaseObj.h</DeclaredIn>
			
			<Declaration>+ (void)ly_addSync_InSystemParallelQueue:(LYSGCDAction)action</Declaration>
			<Parameters>
				<Parameter>
					<Name>action</Name>
					<Abstract type="html">同步任务</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/ly_addSync_InSystemParallelQueue:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/LYSGCDManager/ly_addAsync:queue:</TokenIdentifier>
			<Abstract type="html">在自定义的队列添加异步任务</Abstract>
			<DeclaredIn>LYS_BaseObj.h</DeclaredIn>
			
			<Declaration>+ (void)ly_addAsync:(LYSGCDAction)action queue:(dispatch_queue_t)queue</Declaration>
			<Parameters>
				<Parameter>
					<Name>action</Name>
					<Abstract type="html">异步任务</Abstract>
				</Parameter><Parameter>
					<Name>queue</Name>
					<Abstract type="html">自定义的队列</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/ly_addAsync:queue:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/LYSGCDManager/ly_addSync:queue:</TokenIdentifier>
			<Abstract type="html">在自定义的队列添加同步任务</Abstract>
			<DeclaredIn>LYS_BaseObj.h</DeclaredIn>
			
			<Declaration>+ (void)ly_addSync:(LYSGCDAction)action queue:(dispatch_queue_t)queue</Declaration>
			<Parameters>
				<Parameter>
					<Name>action</Name>
					<Abstract type="html">同步任务</Abstract>
				</Parameter><Parameter>
					<Name>queue</Name>
					<Abstract type="html">自定义的队列</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/ly_addSync:queue:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/LYSGCDManager/ly_add_Barrier_Async:barrierAction:lastAction:</TokenIdentifier>
			<Abstract type="html">障碍任务</Abstract>
			<DeclaredIn>LYS_BaseObj.h</DeclaredIn>
			
			<Declaration>+ (void)ly_add_Barrier_Async:(LYSGCDActionQueue)firstAction barrierAction:(LYSGCDAction)actionBarrier lastAction:(LYSGCDAction)completeAction</Declaration>
			<Parameters>
				<Parameter>
					<Name>firstAction</Name>
					<Abstract type="html">先完成的任务,lyaddBarrier_AsyncAction: queue:调用此方法进行添加</Abstract>
				</Parameter><Parameter>
					<Name>actionBarrier</Name>
					<Abstract type="html">障碍任务</Abstract>
				</Parameter><Parameter>
					<Name>completeAction</Name>
					<Abstract type="html">最后完成的任务</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/ly_add_Barrier_Async:barrierAction:lastAction:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/LYSGCDManager/ly_add_Barrier_AsyncAction:queue:</TokenIdentifier>
			<Abstract type="html">添加障碍任务,配合上面的方法</Abstract>
			<DeclaredIn>LYS_BaseObj.h</DeclaredIn>
			
			<Declaration>+ (void)ly_add_Barrier_AsyncAction:(LYSGCDAction)firstAction queue:(dispatch_queue_t)queue</Declaration>
			<Parameters>
				<Parameter>
					<Name>firstAction</Name>
					<Abstract type="html">任务</Abstract>
				</Parameter><Parameter>
					<Name>queue</Name>
					<Abstract type="html">队列</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/ly_add_Barrier_AsyncAction:queue:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/LYSGCDManager/ly_addAfter:action:</TokenIdentifier>
			<Abstract type="html">延迟任务</Abstract>
			<DeclaredIn>LYS_BaseObj.h</DeclaredIn>
			
			<Declaration>+ (void)ly_addAfter:(NSTimeInterval)interval action:(LYSGCDAction)action</Declaration>
			<Parameters>
				<Parameter>
					<Name>interval</Name>
					<Abstract type="html">延迟的时间</Abstract>
				</Parameter><Parameter>
					<Name>action</Name>
					<Abstract type="html">延迟事件</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/ly_addAfter:action:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/LYSGCDManager/ly_addRepeat:action:</TokenIdentifier>
			<Abstract type="html">重复任务</Abstract>
			<DeclaredIn>LYS_BaseObj.h</DeclaredIn>
			
			<Declaration>+ (void)ly_addRepeat:(NSInteger)num action:(LYSGCDAction)action</Declaration>
			<Parameters>
				<Parameter>
					<Name>num</Name>
					<Abstract type="html">重复的次数</Abstract>
				</Parameter><Parameter>
					<Name>action</Name>
					<Abstract type="html">重复的事件</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/ly_addRepeat:action:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/LYSGCDManager/ly_addOnceAction:</TokenIdentifier>
			<Abstract type="html">一次任务</Abstract>
			<DeclaredIn>LYS_BaseObj.h</DeclaredIn>
			
			<Declaration>+ (void)ly_addOnceAction:(LYSGCDAction)action</Declaration>
			<Parameters>
				<Parameter>
					<Name>action</Name>
					<Abstract type="html">执行的任务</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/ly_addOnceAction:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/LYSGCDManager/ly_add_Group_AsyncAction:notifyAction:</TokenIdentifier>
			<Abstract type="html">等待任务lyaddGroup_AsyncAction: group: queue:调用此方法进行添加</Abstract>
			<DeclaredIn>LYS_BaseObj.h</DeclaredIn>
			
			<Declaration>+ (void)ly_add_Group_AsyncAction:(void ( ^ ) ( dispatch_group_t group , dispatch_queue_t queue ))firstAction notifyAction:(LYSGCDAction)action</Declaration>
			<Parameters>
				<Parameter>
					<Name>firstAction</Name>
					<Abstract type="html">先执行的任务</Abstract>
				</Parameter><Parameter>
					<Name>action</Name>
					<Abstract type="html">其他任务完成后执行的任务</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/ly_add_Group_AsyncAction:notifyAction:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/LYSGCDManager/ly_add_Group_AsyncAction:group:queue:</TokenIdentifier>
			<Abstract type="html">添加等待任务,配合上面方法</Abstract>
			<DeclaredIn>LYS_BaseObj.h</DeclaredIn>
			
			<Declaration>+ (void)ly_add_Group_AsyncAction:(LYSGCDAction)firstAction group:(dispatch_group_t)group queue:(dispatch_queue_t)queue</Declaration>
			<Parameters>
				<Parameter>
					<Name>firstAction</Name>
					<Abstract type="html">任务体</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/ly_add_Group_AsyncAction:group:queue:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
        
        
	</File>
</Tokens>